>>> add_integer = __import__('0-add_integer').add_integer

1. No arguments ()

>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

2. 1 argument (arbitrary type)

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

3. 2 arguments (arbitrary type, arbitrary type)

>>> add_integer(None, "school")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

4. 1 argument (int)

>>> add_integer(1)
99

5. 2 arguments (int, int)

>>> add_integer(1, -2)
-1

6. 1 argument (float)

>>> add_integer(1.3)
99

7. 2 arguments (float, float)

>>> add_integer(1.2, -2.2)
-1

8. 2 arguments (arbitrary type, int)

>>> add_integer(None, 1)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

9. 2 arguments (int, arbitrary type)

>>> add_integer(1, "hello")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

10. 2 arguments (arbitrary type, float)

>>> add_integer("School", 2.3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

11. 2 arguments (float, arbitrary type)

>>> add_integer(22.8, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

12. 2 arguments (extreme float, int)

>>> add_integer(2.0e+308, 1)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

